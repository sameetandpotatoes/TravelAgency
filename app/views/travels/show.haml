- @title=@dest
- @meta=INFO[@dest]["meta"]

%section.module.parallax.parallax-1{style: "background-image: url(#{asset_path INFO[@dest]["first_image"]})"}
	.container
		%h1 Welcome to #{@dest}
		%p=INFO[@dest]["description"]
		%p{style: "text-align: right;"}=INFO[@dest]["from"]
%section.module.content
	.container
		%h1 Learn about our destinations!
		.map
			#hawaii-map.leaflet
		.map-images
			- (0..2).each do |i|
				.flip-container{class: "desc-#{i+1}"}
					.flipper
						.front.image
							%span
								= image_tag INFO[@dest]["cities"][i]["images"], data: {desc: "desc-#{i+1}"}
							%h2=INFO[@dest]["cities"][i]["name"]
						.back
							%h1=INFO[@dest]["cities"][i]["name"]
							%p=INFO[@dest]["cities"][i]["description"]
%section.module.parallax.parallax-2{style: "background-image: url(#{asset_path INFO[@dest]["second_image"]})"}
	.container
		%h1.weather_title #{@weatherData[0]["conditions"]} skies today in #{@dest}
		.weather-data
			.weather-day.single-day
				%p.show-header{style: 'font-variant: small-caps; text-align: center;'} Today
				%p.show-header #{@weatherData[0]["date"]["tz_long"]} Weather
				%p.weather-time=@weatherData[@weatherData.length - 1]
				%div
					=image_tag(@weatherData[0]["icon_url"], size: "100", class: 'inline')
					%p.inline{style: 'font-size: 30px'} #{@weatherData[0]["high"]["fahrenheit"]}°F
				%p.bold #{@weatherData[0]["conditions"]}
			.multiple-days
				- @weatherData = @weatherData[1..4] #Grabs the first four days of weather
				- @weatherData.each do |element|
					.weather-day.inline
						%p.bold.day=element["date"]["weekday"]
						=image_tag(element["icon_url"], size: "75")
						%p{style: 'font-size: 40px'} #{element["high"]["fahrenheit"]}°F
						%p.bold=element["conditions"]
%section.module.content
	.container
		%h1 Select your packages
		.chk-selections.left
			- 3.times do |i|
				.new-activities
					%h1=INFO[@dest]["cities"][i]["name"]
					- @list_activities = INFO[@dest]["cities"][i]["activities"]
					- @list_activities.each do |activity_id|
						.dest-activities
							.squareChkBox
								%input{id: "#{activity_id}", name: "#{INFO[@dest]['cities'][i]['name'].downcase.gsub(/\s+/, "")}",
								type: 'checkbox', value: ACTIVITIES[activity_id]["cost"], "data-days" => ACTIVITIES[activity_id]["nights"]}/
								%label{:for => "#{activity_id}"}
							.activity-title
								%p=ACTIVITIES[activity_id]["name"]
			.calculations
				.price
					%span Total Price: $
					%span#total-price 0
					%span#currency_convert
				.nights
					%span Estimated Days:
					%span#estimated-days 0
		.pk-selections.right
			%h2 Available Packages
			.all-packages
				- @packages = INFO[@dest]["packages"]
				- @packages.each do |pk_id|
					.package{"data-include" => PACKAGES[pk_id]["included"]}
						.pk-image
							= image_tag PACKAGES[pk_id]["image"], class: 'package-img'
						.pk-desc
							%h2=link_to PACKAGES[pk_id]["name"], PACKAGES[pk_id]["link"], target: "_blank"
							%span=PACKAGES[pk_id]["cost"]
						.pk-fav
							- if ActiveSupport::JSON.decode(cookies[:favorites] || "{}").has_key?(pk_id) #Disabled
								%a.favorite.disabled{href: "#"} Favorited
							- else
								%a.favorite{href: "#{pk_id}"} Favorite this package
		.conditions
			.social
				= render "shared/social"
			.terms_conditions
				%h2 Terms and Conditions
				%p.terms
					Prices are in U.S Dollars, are true and accurate at time of printing, are valid for travel as specified, are valid for new bookings only.
					All offers and inclusions are subject to availability and may change or be terminated without notice. Seasonal surcharge, availability, blackout dates and restrictions may apply.
					Any unused portion(s) of inclusions are nontransferable, nonrefundable, and not redeemable for cash.
					Cancellation and charge fees may apply. Rental car includes unlimited mileage, one additional driver, all taxes and service fees.
					It does not include gasoline, optional insurance charges, underage driver charges, upgrades, overtime, drop charges or infant-child seats.
%p#currencyRate{style: "display: none"}=@currencyRate
%p#currencyUnit{style: "display: none"}=@currencyUnit
%p#dest{style: "display: none"}=@dest
:javascript
	var dest_1 = "#{INFO[@dest]['cities'][0]['name'].downcase.gsub(/\s+/, '')}";
	var dest_2 = "#{INFO[@dest]['cities'][1]['name'].downcase.gsub(/\s+/, '')}";
	var dest_3 = "#{INFO[@dest]['cities'][2]['name'].downcase.gsub(/\s+/, '')}";
	var map;
	var myLayer;
	var coords = [#{INFO[@dest]['cities'][0]['location']}, #{INFO[@dest]['cities'][1]['location']}, #{INFO[@dest]['cities'][2]['location']}];
	var titles = ["#{INFO[@dest]['cities'][0]['name']}", "#{INFO[@dest]['cities'][1]['name']}", "#{INFO[@dest]['cities'][2]['name']}"];
	var desc = ['desc-1', 'desc-2', 'desc-3'];
	var colors = ['#f86767','#f86767','#f86767'];

	function initialize_map(){
		L.mapbox.accessToken = "#{ENV['MAPBOX_ACCESS']}";
		map = L.mapbox.map('hawaii-map', "#{ENV['MAPBOX_MAP']}");
		map.setView(#{INFO[@dest]['location']}, #{INFO[@dest]['zoom_level']});
		map.dragging.disable();
		map.touchZoom.disable();
		map.doubleClickZoom.disable();
		map.scrollWheelZoom.disable();
		if (map.tap) map.tap.disable();
		myLayer = L.mapbox.featureLayer().addTo(map);
	}

	function overlay_markers(){
		var features = [];
		for (var i = 0; i < 3; i++){
			var hash = {
				type: 'Feature',
				properties: {
					title: titles[i],
					'marker-color': colors[i],
					'marker-size': 'large',
					'marker-symbol': 'star',
					dest: desc[i]
				},
				geometry: {
					type: 'Point',
					coordinates: coords[i]
				}
			};
			features.push(hash);
		}
		var geojson = {
			type: 'FeatureCollection',
			features: features
		};
		myLayer.setGeoJSON(geojson);
		myLayer.on('mouseover', function(e) {
			e.layer.openPopup();
			$('.flip-container.'+e.layer.feature.properties['dest'] + ' .flipper').addClass("flip");
			// mapClickHandler(e);
		});
		myLayer.on('mouseout', function(e) {
			e.layer.closePopup();
			$('.flip-container.'+e.layer.feature.properties['dest'] + ' .flipper').removeClass("flip");
			// mapClickHandler(e);
		});
	}

	function mapClickHandler(e){
		$('.flip-container.'+e.layer.feature.properties['dest'] + ' .flipper').toggleClass("flip");
	}

	initialize_map();
	overlay_markers();
